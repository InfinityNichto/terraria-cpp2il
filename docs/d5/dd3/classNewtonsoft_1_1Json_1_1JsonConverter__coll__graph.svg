<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Newtonsoft.Json.JsonConverter Pages: 1 -->
<svg width="204pt" height="183pt"
 viewBox="0.00 0.00 204.00 183.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.node, .edge {opacity: 0.7;}
.node.selected, .edge.selected {opacity: 1;}
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="application/ecmascript" xlink:href="../../svg.min.js"/>
<svg id="graph" class="graph">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 179)">
<title>Newtonsoft.Json.JsonConverter</title>
<!-- Node1 -->
<g id="Node000001" class="node">
<title>Node1</title>
<g id="a_Node000001"><a xlink:title=" ">
<polygon fill="#999999" stroke="transparent" points="196,-175 0,-175 0,0 196,0 196,-175"/>
<text text-anchor="start" x="22.5" y="-162.5" font-family="Helvetica,sans-Serif" font-size="10.00">Newtonsoft.Json.JsonConverter</text>
<text text-anchor="start" x="4" y="-147.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="17" y="-147.5" font-family="Helvetica,sans-Serif" font-size="10.00">virtual bool CanRead</text>
<text text-anchor="start" x="4" y="-132.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="17" y="-132.5" font-family="Helvetica,sans-Serif" font-size="10.00">virtual bool CanWrite</text>
<text text-anchor="start" x="4" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="17" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">void WriteJson(JsonWriter</text>
<text text-anchor="start" x="17" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"> writer, object value,</text>
<text text-anchor="start" x="17" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"> JsonSerializer serializer)</text>
<text text-anchor="start" x="4" y="-80.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="17" y="-80.5" font-family="Helvetica,sans-Serif" font-size="10.00">object ReadJson(JsonReader</text>
<text text-anchor="start" x="17" y="-69.5" font-family="Helvetica,sans-Serif" font-size="10.00"> reader, Type objectType,</text>
<text text-anchor="start" x="17" y="-58.5" font-family="Helvetica,sans-Serif" font-size="10.00"> object existingValue, JsonSerializer</text>
<text text-anchor="start" x="17" y="-47.5" font-family="Helvetica,sans-Serif" font-size="10.00"> serializer)</text>
<text text-anchor="start" x="4" y="-32.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="17" y="-32.5" font-family="Helvetica,sans-Serif" font-size="10.00">bool CanConvert(Type</text>
<text text-anchor="start" x="17" y="-21.5" font-family="Helvetica,sans-Serif" font-size="10.00"> objectType)</text>
<text text-anchor="start" x="4" y="-6.5" font-family="Helvetica,sans-Serif" font-size="10.00">#</text>
<text text-anchor="start" x="17" y="-6.5" font-family="Helvetica,sans-Serif" font-size="10.00">JsonConverter()</text>
<polygon fill="#666666" stroke="#666666" points="0,-157.5 0,-157.5 196,-157.5 196,-157.5 0,-157.5"/>
<polygon fill="#666666" stroke="#666666" points="0,-127.5 0,-127.5 15,-127.5 15,-127.5 0,-127.5"/>
<polygon fill="#666666" stroke="#666666" points="15,-127.5 15,-127.5 196,-127.5 196,-127.5 15,-127.5"/>
<polygon fill="none" stroke="#666666" points="0,0 0,-175 196,-175 196,0 0,0"/>
</a>
</g>
</g>
</g>
</svg>
</svg>

<style type='text/css'>
<![CDATA[
[data-mouse-over-selected='false'] { opacity: 0.7; }
[data-mouse-over-selected='true']  { opacity: 1.0; }
]]>
</style>
<script type="application/ecmascript"><![CDATA[
document.addEventListener('DOMContentLoaded', (event) => {
  highlightEdges();
  highlightAdjacentNodes();
});
]]></script>
</svg>
